printf를 여러번 사용하는게 좀 귀찮은데 간편하게 할 수 있는 방법이 있을까

printf를 여러 번 사용할 때 for문을 사용하면 간편하게 표현할 수 있는것 같아

<예제 6-3>
#include <stdio.h>

int main(void)
{
	int i;

	for (i = 0; i < 5; i++)
		printf("**********\n");
	printf("\n\n");

	for (i = 1; i < 10; i+=2)
		printf("**********\n");
	printf("\n\n");

	for (i = 10; i > 0; i-=2)
		printf("**********\n");
	printf("\n\n");

	return 0;
}

예제 6-3을 작성하면서 조건식을 어떻게 작성하는지에 따라 활용할 수 있는 범위가 높은걸 알게된거같아

그러니까 이거 말고도 여러가지 사용 방법이 있을거 같아

<예제 6-6>
#include <stdio.h>

int main(void)
{
	int sum, i, j;
	printf("다중 for문 예제입니다.\n");

	for (i = 1;i <= 3;i++)
	{
		for (j = 1;j <= 3;j++)
		{
			sum = i + j;
			printf("%d + %d = %d\n", i, j, sum);
		}
	}
	return 0;
}

예제 6-6을 풀면서 for문을 여러 번 사용한다는 점에서 생각할 조건이 늘어났지만 잘만 사용한다면 효율성을 높일 수 있다는 것을 알게 된거같아

while문과 for문의 차이는 while문에서는 초기화를 조건식 전에 초기화를 넣지만 for문은 ㄶ어도 안넣어도 상관없는거 같아

<예제 6-11>
#include <stdio.h>

int main(void)
{
	int i = 65;

	while (i <= 90)
	{
		printf("%c", i);
		i++;
	}
	printf("\n");
	return 0;
}

6-11을 코딩하면서 while문과 for문을 분간하여 사용한다면 더 좋은 코딩을 할 수 있을 것 같아

while문의 가장 중요한 장점은 무한 반복으로 빠져 나오기 위해서는 break문을 이용하거나 shift + F5 키를 눌러 강제로 종료하는 거 라고 생각해

<예제 6-13>
#include <stdio.h>

int main(void)
{
	int sum = 0;
	int number = 0;

	printf("1에서 10까지 합을 구합니다.\n");

	do
	{
		number++;
		sum += number;
	} while (number < 10);
	printf("합은 %d입니다.\n", sum);

	return 0;
}

예제 6-13을 작성하며 do~while문을 상황에 따라 가끔 활용할 수 있을 것 같아

<예제 6-15>
#include <stdio.h>

int main(void)
{
	int sum = 0;
	int number = 0;

	while (1)
	{
		sum += number;
		number++;

		if(number > 10) goto ex1;
	}
ex1:
	printf("1에서 10까지 합을 구합니다.\n");
	printf("합은 %d입니다.\n", sum);

	return 0;
}

예제 6-15를 작성하며 goto문에 대해서 어떻게 사용해야하는지에 대해서 알게 된거같아

<예제 6-17>
#include <stdio.h>

int main(void)
{
	int i;

	for (i = 1; 1 < 100; i++)
	{
		printf("%d", i);
		if (i >= 5) break;
	}
	printf("\nfor문을 빠져나왔습니다.\n");
	return 0;
}

반복문을 빠져 나오는 break문은 반복문에 있어 중요한 포인트라는 것이라고 생각해

<예제 6-18>
#include <stdio.h>

int main(void)
{
	int i, sum = 0;

	for (i = 1; i <= 10; i++)
	{
		if (i % 2 == 0) continue;
		sum += i;
	}
	printf("1부터 10까지 홀수의 합은 %d다\n", sum);
	return 0;
}

continue문을 사용하여 반복문을 빠져나오지 않고 해당 반복문의 처음으로 프로그램의 흐름을 이동할 수 있었어

교제 203p 6번 문제
#include <stdio.h>
int main(void)
{
	int i, count = 0;
	for (i = 1; i <= 1000;i++)
	{
		if (count >= 11) continue;
		if (i % 6 == 0)
		{
			printf("%d\n", i);
			count += 1;
		}
		if (count == 10) break;
	}
	return 0;
}

코딩해보면서 continue문과 break문을 같이 사용하지 않아도 정상적으로 문제를 풀 수 있었어

수업을 도와주시는 선배님의 말씀으로는 if문에서  (i % 6! = 0)을 사용햐소 continue를 사용하는 문제라고 알려주셨어
