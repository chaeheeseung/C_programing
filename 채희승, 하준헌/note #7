구조체라는 개념은 확실히 처음 들어보는 것 같네

그러게 점점 배우는게 복잡해지고 많아져서 어렵긴한데 코딩할 때 유용한 부분들이 많은 것 같아

#include <stdio.h>

struct list {
char name;
char gender;
int age;
};

int main(void)
{
struct list st1 = {'T', 'M', 25};

printf("구조체 list의 크기는 %d이다.\n", sizeof(struct list));
printf("구조체 객체 st1의 크기는 %d이다.\n", sizeof(st1));

return 0;
}

구조체를 정의하는 것과 선언하는 것도 신경 써야 할 부분들이 많네

그렇지 않으면 구조체의 정의 부분을 다시 작성해야 해서 그런 것 같아

구조체의 변수를 선언하는 방법은 여러가지로 많은 것 같아

#include <stdio.h>

struct list {
char name;
char gender;
int age;
};

int main(void)
{
struct list st1, st2;
st1.name = 'T';
st1.gender = 'M';
st1.age = 25;

st2.name = 'S';
st2.gender = 'F';
st2.age = 28;

printf("이름 성별 나이\n");
printf("-----------------------\n");
printf(" %c %c %d\n", st1.name, st1.gender, st1.age);
printf(" %c %c %d\n", st2.name, st2.gender, st2.age);

return 0;
}

구조체에서 멤버 변수에 접급할려면 도트 연산자를 이용해야하는구나

도트 연산자를 이용한 코딩을 사용하면 이름과 성별 나이 뿐만 아니라 여러가지 상황에서 분별할 수 있는 코딩을 할 수 있을 것 같아

#include <stdio.h>

struct students {
char name[20];
char address[30];
int age;
};

typedef struct students student;

int main(void)
{
student st1 = {"Moon", "Seoul", 25};
struct students st2 = {"John", "London", 30};

printf("학생 1은 성이 %s이고 %s에 살며 %d살이다.\n", st1.name, st1.address, st1.age);
printf("학생 2는 성이 %s이고 %s에 살며 %d살이다.\n", st2.name, st2.address, st2.age);

return 0;
}

구조체의 재정의로 구조체를 사용해서 더 정확하고 자세하게 분류할 수 있게 된 것 같아

원래는 성별과 나이 이름만 가능했다면 이 코딩으로는 성과 이름 나이를 더 정확하게 나눌 수 있게 된 것 같아

#include <stdio.h>
#include <math.h>
struct ThreeDime {
double x;
double y;
double z;
};
typedef struct ThreeDime ThreeDime;
int main(void)
{

double D1, D2;
ThreeDime A1, A2;

printf("3차원 점 A1의 x, y, z 좌표를 입력하시오.\n");
scanf("%lf %lf %lf", &A1.x, &A1.y, &A1.z);

printf("\n3차원 점 A2의 x, y, z 좌표를 입력하시오.\n");
scanf("%lf %lf %lf", &A2.x, &A2.y, &A2.z);

D1 = sqrt(A1.x * A1.x + A1.y * A1.y + A1.z * A1.z);

D2 = sqrt((A1.x - A2.x) * (A1.x - A2.x) + (A1.y - A2.y) * (A1.y - A2.y) + (A1.z - A2.z)
* (A1.z - A2.z));

printf("\n점 A1과 원점의 거리는 %.2lf이다.\n\n", D1);
printf("점 A1과 점 A2의 거리는 %.2lf이다.\n", D2);

return 0;
}

구조체를 이용해서 x, y, z 좌표를 나눠서 각각 3차원 좌표의 원점과의 거리와 2개의 지정된 좌표끼리의 거리를 구할 수 있네

고등학생 때 배웠던 기하문제를 코딩으로도 해결 할 수 있을 수도 있겠네 그럼
